// rem conversion mixin
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// breakpoint mixin {
@mixin breakpoint($point) {
  @if $point == large {
    @media (min-width: 64.375em) { @content; }
  }
  @else if $point == medium {
    @media (min-width: 50em) { @content; }
  }
  @else if $point == small {
    @media (min-width: 37.5em)  { @content; }
  }
}

// retina images
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

// retina, png, svg background image fallback
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}

 // clearfix
 @mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// border radius
@mixin border-radius($radius) {
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
  background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
  background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

// opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// center block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// absolute position
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

// line height
@mixin line-height($heightValue: 12 ){
    line-height: $heightValue + px; //fallback for old browsers
    line-height: ($heightValue / 16) + rem;
}

// animations and keyframes
@mixin keyframes($animation-name) {
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  animation: #{$str};      
}

// transitions
@mixin transition($args...) {
  transition: $args;
}

%innermax {
  display: block;
  max-width: 1024px;
  margin: calculateRem(15px) auto;
  padding: calculateRem(20px);
}

@mixin flex-container($flex-type, $flex-direction: null, $flex-wrap: null, $justify-content: null, $align-items: null, $align-content: null) {
  @if $flex-type == flexbox {
    display: flex;
  } 
  @else 
  {
    display: inline-flex;
  }
  flex-flow: $flex-direction $flex-wrap;
  justify-content: $justify-content;
  align-items: $align-items;
  align-content: $align-content;
}

@mixin flex-column($flex-order: null, $flex-grow: null, $flex-shrink: null, $justify-basis: null, $align-self: null) {
  flex: $flex-grow $flex-shrink $justify-basis; 
  align-self: $align-self;
} 

@mixin slider-btn($side) {
    display: block;
    position: absolute;
    height: 20px;
    width: 20px;
    cursor: pointer;
    background: url(../img/#{$side}-arrow.svg) no-repeat;
    background-size: contain;
    top: 50%;
    -webkit-transform: translate(0, -50%);
    -ms-transform: translate(0, -50%);
    transform: translate(0, -50%);
    padding: 0;
    border: none;
    outline: none;
}
